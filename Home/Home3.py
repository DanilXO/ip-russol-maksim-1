# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()

print('(Задача №1)')
fruits = ['АБРИКОС', 'БАНАН', 'ГРЕЙПФРУТ', 'МАНГО', 'ВИНОГРАД']
l = 0
for i in fruits:
    l += 1
    print(l, '.{:>10}'.format(i))
print()

# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

l1 = [1, 2, 3, 5, 6, 7, 8]
l2 = [2, 3, 4, 6, 7, 9, 0]
l3 = list(set(l1) - set(l2))
sen = 'форматированного списка l1 без элементов, совпадающих со списком l2 ==> \nl1 ='
print(f'(Задача №2)\nl1 = {l1}\nl2 ={l2}')
print(f'Вывод {sen} {l3}')
print()

# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.import random
usl = 'если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на 2'
print('(Задача №3)')
import random

n = 10
m = [random.randint(10, 99) for i in range(n)]
print(f'Список (m) = {m}')
c = [j * 2 if j % 2 else j // 4 for j in m]
print(f'Список (c) = {c} \nУсловие задачи (отношение списка (m) к (с)): {usl}')
print()

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]
import random  # запускаем модуль random

d = int(input(
    '(Задача №1)\nСколько списков желаете задать (указать числом):\n'))  # делаем запрос на количество генерируемых
# списков
n = 15  # переменная на длину списка из 15 элементов
for a in range(0, d):
    random.seed(a)  # оператор - механизм обспечения воспроизводимости результатов работы генератора случайных чисел
    m = [random.randint(-100, 100) for i in range(n)]
    import math
    c = []
    p = [i for i in m if i > 0]
    for j in p:
        x = abs(math.sqrt(j))
        if x.is_integer():
            c.append(int(x))
    print(f'Список (m) = {m}')
    if not c:
        print('Список (c) пуст, поскольку элементы исходного сгенерированного списка (m) не имеют целочисленных '
              'корней')
    else:
        print(f'Список (c) = {c}')
